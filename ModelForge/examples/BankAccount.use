model BankAccount

enum AccountType {Savings, Investments}

abstract class SuperAccount
end

class Bank
attributes
self : Integer
end

class Account < SuperAccount
attributes
type : AccountType
balance : Integer
test: Person
operations
transfer(variable : Integer) : Integer
    begin
        self.balance := self.balance + 1;
    end
end

class Person
attributes
age : Integer
end

associationclass Employees between
Bank [1..*] role bank
Person [*] role employees
end

composition AccountOfBanks between
Account [*] role accounts
Bank [1..*] role bank
end

association Ownership between
Account [*] role accounts
Person [1,3..4] role owner
end

association Use between
Account [*] role usedAccounts
Person [*] role user
end

constraints
context Account inv Positive_Balance:
    balance > 0