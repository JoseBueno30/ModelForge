model Negocio

class Empresa
attributes
correo : String --+
dir : String --+
nombre : String --+
tlf : Integer --+
valor_minimo_pedido : Integer --+
constraints
inv Plantilla_Minima:
	self.contrato -> exists(puesto='Trabajador')
inv Plantilla_Valida:
	self.contrato -> select(puesto='Director') -> size() <= 1 and self.contrato -> select(puesto='Gerente') -> size() <= 1
end

class Pedido
attributes
descuento : Real --+
 derived = if self.persona.contrato -> select(e:Contrato | e.contratador = self.vendedor) -> size() = 1 or self.vendedor.pedido -> select(e:Pedido | e.persona = self.persona and e.fecha <= self.fecha) -> collect(valor) -> sum() >= 1000 then 0.100000 else 0 endif
fecha : String --+
precio_final : Real --+
 derived = self.valor * (1 - self.descuento)
valor : Integer --+
 derived = if self.productos_Pedido -> notEmpty() then self.productos_Pedido -> collect(pp:Productos_Pedido | pp.producto.etiqueta -> select(e:Etiqueta | e.empresa_propietaria = self.vendedor) -> collect(precio*pp.cantidad) -> sum()) -> sum() else 0 endif
constraints
inv Consistencia_Cantidad_Empresa_Pedido:
	if self.producto -> forAll(p:Producto | self.vendedor.producto -> includes(p)) then self.productos_Pedido -> forAll(pp:Productos_Pedido | self.vendedor.etiqueta -> select(e:Etiqueta | pp.producto = e.producto) -> forAll(e:Etiqueta | e.cantidad >= pp.cantidad) and pp.cantidad > 0) else false endif
inv Pedido_Minimo:
	self.valor >= self.vendedor.valor_minimo_pedido
end

class Persona
attributes
DNI : String --+
apellido1 : String --+
apellido2 : String --+
correo : String --+
edad : Integer --+
nombre : String --+
tlf : Integer --+
constraints
inv Cantidad_Contratos:
	self.contrato -> size() <= 3
end

class Producto
attributes
nombre : String --+
end

association Comprar between
Pedido [*] role pedido --+
Persona [1] role persona --+
end

association Vender between
Pedido [*] role pedido --+
Empresa [1] role vendedor --+
end

associationclass Contrato between
Empresa [0..3] role contratador --+
Persona [*] role empleado --+
attributes
puesto : String --+
salario : Integer --+
constraints
inv Puest:
	if 'a' > 'b' then true else false endif
inv Puesto_Valido:
	self.puesto = 'Trabajador' or self.puesto = 'Gerente' or self.puesto = 'Director'
inv Salarios:
	if self.puesto = 'Director' then self.contratador.contrato -> forAll(c:Contrato | if c.puesto = 'Director' then true else self.salario > c.salario endif) else true endif and if self.puesto = 'Gerente' then self.contratador.contrato -> forAll(c:Contrato | if c.puesto = 'Director' or c.puesto = 'Gerente' then true else self.salario > c.salario endif) else true endif
end

associationclass Etiqueta < Contrato between
Empresa [*] role empresa_propietaria --+
Producto [*] role producto --+
attributes
cantidad : Integer --+
precio : Integer --+
end

associationclass Posesion between
Persona [*] role poseedor --+
Producto [0..10] role producto --+
attributes
cantidad : Integer --+
 derived = self.poseedor.pedido -> collect(p:Pedido | p.productos_Pedido -> select(pp:Productos_Pedido | pp.producto = self.producto) -> collect(cantidad) -> sum()) -> sum()
end

associationclass Productos_Pedido between
Pedido [*] role pedido --+
Producto [*] role producto --+
attributes
cantidad : Integer --+
end

